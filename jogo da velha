using System;

namespace JogoDaVelha
{
    class Program
    {
        static char[] board = { '1', '2', '3', '4', '5', '6', '7', '8', '9' };
        static char currentPlayer = 'X';

        static void Main(string[] args)
        {
            bool gameover = false;

            while (!gameover)
            {
                Console.Clear();
                DrawBoard();

                int move = GetPlayerMove();

                if (IsValidMove(move))
                {
                    MakeMove(move);

                    if (IsWinningMove())
                    {
                        Console.Clear();
                        DrawBoard();
                        Console.WriteLine("Jogador " + currentPlayer + " venceu!");
                        gameover = true;
                    }
                    else if (IsBoardFull())
                    {
                        Console.Clear();
                        DrawBoard();
                        Console.WriteLine("Empate!");
                        gameover = true;
                    }
                    else
                    {
                        currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
                    }
                }
                else
                {
                    Console.WriteLine("Movimento inválido! Pressione qualquer tecla para tentar novamente.");
                    Console.ReadKey();
                }
            }

            Console.WriteLine("Pressione qualquer tecla para sair.");
            Console.ReadKey();
        }

        static void DrawBoard()
        {
            Console.WriteLine("     |     |      ");
            Console.WriteLine("  " + board[0] + "  |  " + board[1] + "  |  " + board[2] + "   ");
            Console.WriteLine("_____|_____|_____ ");
            Console.WriteLine("     |     |      ");
            Console.WriteLine("  " + board[3] + "  |  " + board[4] + "  |  " + board[5] + "   ");
            Console.WriteLine("_____|_____|_____ ");
            Console.WriteLine("     |     |      ");
            Console.WriteLine("  " + board[6] + "  |  " + board[7] + "  |  " + board[8] + "   ");
            Console.WriteLine("     |     |      ");
        }

        static int GetPlayerMove()
        {
            Console.WriteLine("Jogador " + currentPlayer + ", faça sua jogada (1-9):");
            int move;
            int.TryParse(Console.ReadLine(), out move);
            return move - 1;
        }

        static bool IsValidMove(int move)
        {
            if (move < 0 || move >= 9)
                return false;

            if (board[move] == 'X' || board[move] == 'O')
                return false;

            return true;
        }

        static void MakeMove(int move)
        {
            board[move] = currentPlayer;
        }

        static bool IsWinningMove()
        {
            // Linhas
            if (board[0] == currentPlayer && board[1] == currentPlayer && board[2] == currentPlayer)
                return true;
            if (board[3] == currentPlayer && board[4] == currentPlayer && board[5] == currentPlayer)
                return true;
            if (board[6] == currentPlayer && board[7] == currentPlayer && board[8] == currentPlayer)
                return true;

            // Colunas
            if (board[0] == currentPlayer && board[3] == currentPlayer && board[6] == currentPlayer)
                return true;
            if (board[1] == currentPlayer && board[4] == currentPlayer && board[7] == currentPlayer)
                return true;
            if (board[2] == currentPlayer && board[5] == currentPlayer && board[8] == currentPlayer)
                return true;

            // Diagonais
            if (board[0] == currentPlayer && board[4] == currentPlayer && board[8] == currentPlayer)
                return true;
            if (board[2] == currentPlayer && board[4] == currentPlayer && board[6] == currentPlayer)
                return true;

            return false;
        }

        static bool IsBoardFull()
        {
            for (int i = 0; i < board.Length; i++)
            {
                if (board[i] != 'X' && board[i] != 'O')
                    return false;
            }
            return true;
        }
    }
}
